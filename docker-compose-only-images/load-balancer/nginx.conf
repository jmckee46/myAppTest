user nginx;

worker_processes auto;

error_log /dev/stderr notice;

events {
  use epoll;
  multi_accept on;
  worker_connections 1024;
}

http {
  log_format json '{'
                    '"stream": "https",'
                    '"time": "$time_iso8601",'
                    '"pipelined": "$pipe",'
                    '"request_length": $request_length,'
                    '"body_bytes": $body_bytes_sent,'
                    '"gzip_ratio": "$gzip_ratio",'
                    '"status": "$status",'
                    '"content_type": "$sent_http_content_type",'
                    '"content_length": $sent_http_content_length,'
                    '"uri": "$request",'
                    '"subledger_request_key": "$remote_user",'
                    '"subledger_request_id": "$sent_http_x_subledger_request_id",'
                    '"remote_ip": "$remote_addr",'
                    '"referer": "$http_referer",'
                    '"user_agent": "$http_user_agent",'
                    '"elapsed": $request_time'
                  '}';

  access_log /dev/stdout json;

  more_clear_headers Server;
  server_tokens off;
  server_name_in_redirect off;

  tcp_nopush on;
  tcp_nodelay on;

  real_ip_header X-Forwarded-For;

  reset_timedout_connection on;

  proxy_http_version 1.1;

  proxy_set_header Host $host;
  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

  ssl_protocols             TLSv1.2 TLSv1.1 TLSv1;
  ssl_ciphers               HIGH:!aNULL:!MD5:!RC4:!3DES;
  ssl_prefer_server_ciphers on;
  ssl_certificate           /etc/nginx/ssl/load-balancer.crt;
  ssl_certificate_key       /etc/nginx/ssl/load-balancer.key;
  ssl_session_cache         shared:TLS:4m;
  ssl_session_timeout       60m;

  upstream health-check {
    server health-check;
  }

  server {
    server_name load-balancer;

    listen 443 ssl http2;

    location ~ ^/* {
      proxy_pass http://health-check;
    }
  }

  server {
    listen      80;
    server_name load-balancer;
    return      301 https://$server_name$request_uri;
  }

}
